@model Model.EF.Category

@{
    ViewBag.Title = "Thêm mới thể loại";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Thêm mới thể loại
}
@section jsFooter{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/assets/admin/js/plugins/ckeditor/config.js',
        });
    </script>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-lg-9 col-sm-9 col-xs-12">
        <div class="widget">
            <div class="widget-header bg-blue">
                <span class="widget-caption">Tin tức</span>
            </div>
            <div class="widget-body bordered-top bordered-info">
                <div class="collapse in">
            
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", @placeholder = "Tiêu đề bài viết" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.MetaTitle, htmlAttributes: new { @class = "form-control", @placeholder = "Tiêu đề không dấu" })
                            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2"><span>Danh mục cha</span></div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.ParentID, null, htmlAttributes: new { @class = "form-control" })
                                @Html.TextBoxFor(model => model.ParentID, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                 
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "form-control", @placeholder = "Đoạn mô tả ngắn" })
                        @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.MetaKeywords, htmlAttributes: new { @class = "form-control", @placeholder = "Từ khóa" })
                        @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.DisplayOrder, htmlAttributes: new { @class = "form-control", @placeholder = "Thứ tự" })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(model => model.Status)
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                <span class="text">Kích hoạt</span>
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Thêm mới" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
